<launch>

  <!-- defines name of the namespace -->
  <arg name="UAV_NAME" default="$(optenv UAV_NAME uav1)" />

  <arg name="custom_config" default="" />

  <!-- will it run using GNU debugger? -->
  <arg name="DEBUG" default="false" />
  <arg unless="$(arg DEBUG)" name="launch_prefix_debug" value=""/>
  <arg     if="$(arg DEBUG)" name="launch_prefix_debug" value="debug_roslaunch"/>

  <!-- will it run as standalone nodelet or using a nodelet manager? -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="$(arg UAV_NAME)_state_monitor_manager" />
  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <group ns="$(arg UAV_NAME)">

    <!-- IROCBridge nodelet -->
    <node pkg="nodelet" type="nodelet" name="state_monitor" args="$(arg nodelet) mrs_robot_diagnostics/StateMonitor $(arg nodelet_manager)" launch-prefix="$(arg launch_prefix_debug)" output="screen">

      <param name="config" value="$(find mrs_robot_diagnostics)/config/state_monitor_config.yaml" />

      <param if="$(eval arg('custom_config') == '')" name="custom_config" value="" />
      <param if="$(eval not arg('custom_config') == '' and arg('custom_config')[0] == '/')" name="custom_config" value="$(arg custom_config)" />
      <param if="$(eval not arg('custom_config') == '' and not arg('custom_config')[0] == '/')" name="custom_config" value="$(env PWD)/$(arg custom_config)" />

      <!-- Subscribers -->
      <remap from="~uav_status_in" to="mrs_uav_status/uav_status" />
      <remap from="~hw_api_status_in" to="hw_api/status" />
      <remap from="~control_manager_diagnostics_in" to="control_manager/diagnostics" />
      <remap from="~automatic_start_can_takeoff_in" to="automatic_start/can_takeoff" />

    </node>

  </group>

</launch>
